{"title":"The Virtual Plant Laboratory","markdown":{"yaml":{"title":"The Virtual Plant Laboratory","author":"Alejandro Morales Sierra","date":"last-modified","execute":{"enabled":false}},"headingText":"Introduction","containsRefs":false,"markdown":"\n\n\nThe Virtual Plant Laboratory (VPL) is a Julia package that aids in the construction, \nsimulation and visualization of functional-structural plant models (FSPM). VPL \nis not a standalone solution to all the computational problems relevant to FSPM, \nbut rather it focuses on those algorithms and visualizations that are specific to \nFSPM and for which there are no good solutions in the Julia package ecosystem. \nFurthermore, VPL is 100% written in Julia and therefore VPL will work in any \nplatform and with any code editor where Julia works. Finally, VPL does not offer \na domain specific language for FSPM but rather it allows building FSP models by \ncreating user-defined data [types](https://docs.julialang.org/en/v1/manual/types/) \nand [methods](https://docs.julialang.org/en/v1/manual/methods/).\n\nThere is no standard definition of what an  FSPM is, though these models will \nalways involve some combination of plant structure and function, so it is likely \nthat VPL will not be useful with every possible FSPM. Instead, VPL focuses on \nmodels that represent indivudual plants as graphs of elements (usually organs) \nthat interact with each other and with the environment. In a typical VPL model, \neach plant is represented by its own graph which can change dynamically through \nthe iterative application of graph rewriting rules. Based on this goal, what VPL \noffers mainly are data structures and algorithms that allow \n\n1.  modelling dynamic graphs that represent plants,  \n2.  modelling the interaction between plants and their 3D environment by generating 3D structures from the graphs and simulating capture of different resources (e.g. light) and \n3.  modelling the interaction among elements within each plant by constructing  dynamic networks that represent systems of ordinary differential equations. \n\nIn terms of design, VPL gives priority to performance and simple interfaces as\nopposed to complex layers of abstraction. This implies that models in VPL may\nbe more verbose and procedural (as opposed to descriptive) than in other FSPM\nplatforms, while being more transparent and easier to follow.\n\n## Installation \n\nVPL requires using Julia version 1.7 or higher. The installation of VPL is as\neasy as running the following code:\n\n```julia\nusing Pkg\nPkg.add(PackageSpec(url = \"https://github.com/AleMorales/VPL.git\", rev  = \"master\"))\n```\n\n## The VPL ecosystem\n\nThe package VPL contains all the basic functionality to build FSPM but, as \nindicated earlier, the emphasis is on minimal, simple and transparent interfaces.\nIn order to facilitate the construction of advanced FSPM, an ecosystem of \npackages will be built around VPL that bring higher levels of abstraction and \nreusable components with which models can be built.\n\nThe packages currently planned include\n\n* Ecophys: Algorithms and data structures to simulate ecophysiological processes including photosynthesis, transpiration, leaf energy balance, phenology, respiration, nutrient and water uptake, etc.\n\n* Sky: Algorithms to simulate different sky conditions in terms of the intensity of solar radiation and its spatial distribution.\n\n* GCIM: A generic model that allows simulating multiple types of crops with an emphasis on interactions among crops\n\n## Documentation\n\nDocumentation for VPL is provided in this website in four formats:\n\n1. User manual\n2. Tutorials and examples\n3. API\n4. Technical notes\n\nNew users are expected to start with the tutorials and consult the user manual\nto understand better the different concepts used in VPL and get an overview of\nthe different options available. The API documentation describes each individual \nfunction and data type, with an emphasis on inputs and outputs and (in addition \nto this website) it can be accessed from within Julia with `?` (see the section \n[Accessing Documentation](https://docs.julialang.org/en/v1/manual/documentation/#Accessing-Documentation-1) \nin the Julia manual). The developer manual is useful for people who want to \nunderstand the internal details of VPL and how different algorithms are \nimplemented (i.e. the developer manual should be seen as a supplementary to the\nsource code of VPL).\n\n\n\n\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"output-file":"index.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.0.32","theme":{"light":"default","dark":"darkly"},"title":"The Virtual Plant Laboratory","author":"Alejandro Morales Sierra","date":"last-modified"},"extensions":{"book":{"multiFile":true}}}}}